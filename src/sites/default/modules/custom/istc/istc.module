<?php
// $Id:$


/**
 * Implementation of hook_menu().
 *
 * 
 * @return array
 */

function istc_menu() {
  $items = array();
 
  $items['node/%node/view'] = array(
    'weight' => -10,
  );
  
  $items['node/%node/blog'] = array(
    'title' => 'Blog Posts',
    'page callback' => '_istc_groupblog',
    'page arguments' => array(1),
    'access callback' => '_istc_check_group_tab_permission',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => -9,
  );
  
  $items['node/%node/files'] = array(
    'title' => 'File Repository',
    'page callback' => '_istc_groupfiles',
    'page arguments' => array(1),
    'access callback' => '_istc_check_group_tab_permission',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => -8,
  );

  $items['node/%node/pages'] = array(
    'title' => 'Pages',
    'page callback' => '_istc_grouppages',
    'page arguments' => array(1),
    'access callback' => '_istc_check_group_tab_permission',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => -7,
  );
  /*
  $items['node/%node/events'] = array(
    'title' => 'Events',
    'page callback' => '_istc_groupevents',
    'page arguments' => array(1),
    'access callback' => '_istc_check_group_tab_permission',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => -6,
  ); 
  */
  $items['node/%node/pubs'] = array(
    'title' => 'Publications',
    'page callback' => '_istc_grouppubs',
    'page arguments' => array(1),
    'access callback' => '_istc_check_group_tab_permission',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => -6,
  ); 
  
  $items['node/%node/edit'] = array(
    'weight' => 1,
  );
  
  $items['gocollab'] = array(
    'page callback' => '_goto_collab',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    );
  
  return $items;
}

function user_authenticated() {
    global $user;
    return $user->uid;
}


/*
 * Check whether to display group tabs.
 */
function _istc_check_group_tab_permission($node) {
  return ($node->type == 'group') and user_authenticated() ;
}


/* display group content */
function _istc_groupblog($node) {
  /*$group = og_get_group('node', $node->nid);
  return views_embed_view("og_nodes","og_blog_block", $group->gid);*/
  return views_embed_view("group_content","group_blog_block", $node->nid);
}

function _istc_groupfiles($node) {
  return views_embed_view("group_content","group_files_block", $node->nid);
}

function _istc_grouppages($node) {
  return views_embed_view("group_content","group_pages_block", $node->nid);
}
/*
function _istc_groupevents($node) {
  //drupal_goto("collab/calendar/month/".$group->gid);
  return views_embed_view("group_content","group_events_block", $node->nid);
}
*/
function _istc_grouppubs($node) {
  return views_embed_view("group_content","group_pubs_block", $node->nid);
}

function istc_menu_alter (&$items) {
    $items['collab']['access callback'] = 'user_authenticated';
}

function _goto_collab () {
    global $user;
    $dest = drupal_get_destination();

    if ($user->uid) { /* user is logged in, go to collab page */
        drupal_goto('content/istc-social-main-group',$dest);
    } else {  /* anonymous user, go to user login page */
        drupal_goto('user',$dest);
    }
}

function get_update_event ($nid) {  
  $node = node_load($nid);
  $created = $node->created;
  $updated = $node->changed;
  $lastcomment = $node->last_comment_timestamp;
  $event = "";
  if ($updated > $created) {
      if ($updated > $lastcomment) {
          $event = "UDPATED";
      } else {
          $event = "NEW COMMENT";
      }
  } else {
      if ($lastcomment > $created) {
          $event = "NEW COMMENT";
      } else {
          $event = "NEW CONTENT";
      }
  }
  return $event;
}

/* istc role field should only be accessible to admins  - Not currently working */
function istc_form_profile2_form_alter(&$form, &$form_state) {
  $form['profile_info']['field_istc_role']['#access'] = user_access('administer users');
}

function _send_digest ($email, $key, $body, $freq) {
    $sitename = variable_get('site_name', "Default site name");
    $from =  variable_get('site_mail', ini_get('sendmail_from'));
    $message = array(
		 'to' => $email,
		 'subject' => t($freq.' Digest - Groups Activity on '.$sitename),
		 'body' => $body,
		 'headers' => array(
		     'From' =>  $from,
                     'MIME-Version' => '1.0',
		     'Content-Type' => 'text/html;charset=utf-8',),
	       );
	      
    $system = drupal_mail_system('istc', $key);
    
    if ($system->mail($message)) {
	//print "SUCCESS!";
    } else {
	//print "failure :-( ";
    }
}


function send_digest_to_users () {
   watchdog('ISTC Digest', "executing send_digest_to_users...");
   global $user;
   $ismonday = (date('w') == 3);
   /*$query =  "select uid, name from users where uid  and uid !=1> 0 ";*/
   $query =  "select uid, name from users where uid  and uid > 0 ";

   $result = db_query($query);
   $users = array();
   foreach ($result as $users) {
       $uid = $users->uid;
       $usr = user_load($uid);
       $profile = profile2_load_by_user($uid, 'profile_info');
       
       $name = $users->name;
       $email = $usr->mail;
       $key = $name.":".date('m-d-Y');
       if ($profile) { // special check to avoid sbp users
       if ($profile->field_istc_notifications) {
           $notify = $profile->field_istc_notifications['und'][0]['value'];
           
           if ($notify == 'daily') {  
       //print '<PRE> DAILY: '.($name)." : ".($email). '</PRE>';
       watchdog('ISTC Digest', "Sending Daily Digest to ".$email);
               $original_user = $user;
               $old_state = drupal_save_session(FALSE);
               $user = user_load($uid);

               $output = views_embed_view("group_content","groups_activity_digest");
               _send_digest($email, $key, $output, "Daily");

               $user = $original_user;
               drupal_save_session($old_state);
               
           } else if ($notify == 'weekly') {
       //print '<PRE> WEEKLY: '.($name)." : ".($email). '</PRE>';
       watchdog('ISTC Digest', "Sending Weekly Digest to ".$email);
               if ($ismonday) {
                  $original_user = $user;
                  $old_state = drupal_save_session(FALSE);

                  $user = user_load($uid);

                  $output = views_embed_view("group_content","groups_activity_digest_weekly");
                  _send_digest($email, $key, $output, "Weekly");

                  $user = $original_user;
                  drupal_save_session($old_state);
               }       
           }
       }
       }      
   }
}

function istc_cron() {
    send_digest_to_users();
}

